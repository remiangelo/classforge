---
import { hasRole } from "../../lib/supabase";

// Determine user roles for navigation permissions
const isAdmin = await hasRole('admin');
const isTeacher = await hasRole('teacher');
const isStudent = await hasRole('student');
const isParent = await hasRole('parent');

// Navigation structure
const navigation = [
  {
    name: "Dashboard",
    href: "/dashboard",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="7" height="9"></rect><rect x="14" y="3" width="7" height="5"></rect><rect x="14" y="12" width="7" height="9"></rect><rect x="3" y="16" width="7" height="5"></rect></svg>`,
    showTo: ['admin', 'teacher', 'student', 'parent'],
  },
  {
    name: "Students",
    href: "/students",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M22 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>`,
    showTo: ['admin', 'teacher'],
  },
  {
    name: "Teachers",
    href: "/teachers",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>`,
    showTo: ['admin'],
  },
  {
    name: "Classes",
    href: "/classes",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"></path><path d="M18.4 9.6a6 6 0 1 0 0 4.8"></path></svg>`,
    showTo: ['admin', 'teacher', 'student', 'parent'],
  },
  {
    name: "Attendance",
    href: "/attendance",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 2v4"></path><path d="M16 2v4"></path><rect x="2" y="6" width="20" height="16" rx="2"></rect><path d="M9 14l2 2l4-4"></path></svg>`,
    showTo: ['admin', 'teacher'],
  },
  {
    name: "Grades",
    href: "/grades",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 12h-4l-3 9L9 3l-3 9H2"></path></svg>`,
    showTo: ['admin', 'teacher', 'student', 'parent'],
  },
  {
    name: "Announcements",
    href: "/announcements",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>`,
    showTo: ['admin', 'teacher', 'student', 'parent'],
  },
  {
    name: "Settings",
    href: "/settings",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path></svg>`,
    showTo: ['admin', 'teacher', 'student', 'parent'],
  },
];

// Filter navigation based on user role
const filteredNavigation = navigation.filter(item => {
  if (isAdmin && item.showTo.includes('admin')) return true;
  if (isTeacher && item.showTo.includes('teacher')) return true;
  if (isStudent && item.showTo.includes('student')) return true;
  if (isParent && item.showTo.includes('parent')) return true;
  return false;
});

// Active path
const pathname = Astro.url.pathname;
---

<aside class="fixed inset-y-0 left-0 z-50 hidden w-64 bg-sidebar text-sidebar-foreground lg:block">
  <div class="flex h-full flex-col">
    <!-- Logo -->
    <div class="border-b border-sidebar-border bg-sidebar-accent/5 px-4 py-4">
      <a href="/dashboard" class="flex items-center gap-2">
        <div class="flex h-10 w-10 items-center justify-center rounded-lg bg-primary text-primary-foreground">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 10v6M2 10l10-5 10 5-10 5z"></path>
            <path d="M6 12v5c3 3 9 3 12 0v-5"></path>
          </svg>
        </div>
        <div class="flex flex-col">
          <span class="text-lg font-bold tracking-tight">ClassForge</span>
          <span class="text-xs opacity-70">School Management</span>
        </div>
      </a>
    </div>

    <!-- Navigation -->
    <nav class="flex-1 overflow-y-auto p-3">
      <ul class="space-y-1">
        {filteredNavigation.map(item => (
          <li>
            <a 
              href={item.href} 
              class={`flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium transition-colors hover:bg-sidebar-accent/10
                ${pathname === item.href || pathname.startsWith(item.href + '/') 
                  ? 'bg-sidebar-accent/10 text-sidebar-accent-foreground font-semibold' 
                  : 'text-sidebar-foreground/80 hover:text-sidebar-foreground'}`}
            >
              <span class="flex-shrink-0" set:html={item.icon} />
              {item.name}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Footer -->
    <div class="border-t border-sidebar-border p-4">
      <div class="flex items-center gap-3 rounded-md bg-sidebar-accent/5 px-3 py-2 text-sidebar-foreground/80">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="10"></circle>
          <path d="M12 16v-4"></path>
          <path d="M12 8h.01"></path>
        </svg>
        <div class="flex-1 text-xs">
          <p>Need help? Check our <a href="#" class="text-primary underline">documentation</a> or contact support.</p>
        </div>
      </div>
    </div>
  </div>
</aside>

<!-- Mobile sidebar backdrop -->
<div id="sidebar-backdrop" class="fixed inset-0 z-40 hidden bg-black/50 lg:hidden"></div>

<!-- Mobile sidebar toggle button -->
<button 
  id="sidebar-toggle" 
  class="fixed bottom-4 right-4 z-40 flex h-12 w-12 items-center justify-center rounded-full bg-primary text-primary-foreground shadow-lg lg:hidden"
>
  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <line x1="3" y1="12" x2="21" y2="12"></line>
    <line x1="3" y1="6" x2="21" y2="6"></line>
    <line x1="3" y1="18" x2="21" y2="18"></line>
  </svg>
</button>

<!-- Mobile sidebar -->
<aside id="mobile-sidebar" class="fixed inset-y-0 left-0 z-50 w-64 -translate-x-full transform bg-sidebar text-sidebar-foreground transition-transform duration-200 ease-in-out lg:hidden">
  <div class="flex h-full flex-col">
    <!-- Same content as desktop sidebar -->
    <div class="border-b border-sidebar-border bg-sidebar-accent/5 px-4 py-4">
      <a href="/dashboard" class="flex items-center gap-2">
        <div class="flex h-10 w-10 items-center justify-center rounded-lg bg-primary text-primary-foreground">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 10v6M2 10l10-5 10 5-10 5z"></path>
            <path d="M6 12v5c3 3 9 3 12 0v-5"></path>
          </svg>
        </div>
        <div class="flex flex-col">
          <span class="text-lg font-bold tracking-tight">ClassForge</span>
          <span class="text-xs opacity-70">School Management</span>
        </div>
      </a>
    </div>

    <nav class="flex-1 overflow-y-auto p-3">
      <ul class="space-y-1">
        {filteredNavigation.map(item => (
          <li>
            <a 
              href={item.href} 
              class={`flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium transition-colors hover:bg-sidebar-accent/10
                ${pathname === item.href || pathname.startsWith(item.href + '/') 
                  ? 'bg-sidebar-accent/10 text-sidebar-accent-foreground font-semibold' 
                  : 'text-sidebar-foreground/80 hover:text-sidebar-foreground'}`}
            >
              <span class="flex-shrink-0" set:html={item.icon} />
              {item.name}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <div class="border-t border-sidebar-border p-4">
      <div class="flex items-center gap-3 rounded-md bg-sidebar-accent/5 px-3 py-2 text-sidebar-foreground/80">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="10"></circle>
          <path d="M12 16v-4"></path>
          <path d="M12 8h.01"></path>
        </svg>
        <div class="flex-1 text-xs">
          <p>Need help? Check our <a href="#" class="text-primary underline">documentation</a> or contact support.</p>
        </div>
      </div>
    </div>
  </div>
</aside>

<script>
  document.addEventListener('astro:page-load', () => {
    const sidebarToggle = document.getElementById('sidebar-toggle');
    const mobileSidebar = document.getElementById('mobile-sidebar');
    const sidebarBackdrop = document.getElementById('sidebar-backdrop');
    
    if (sidebarToggle && mobileSidebar && sidebarBackdrop) {
      // Toggle sidebar
      sidebarToggle.addEventListener('click', () => {
        mobileSidebar.classList.toggle('-translate-x-full');
        sidebarBackdrop.classList.toggle('hidden');
        document.body.classList.toggle('overflow-hidden');
      });
      
      // Close sidebar when clicking outside
      sidebarBackdrop.addEventListener('click', () => {
        mobileSidebar.classList.add('-translate-x-full');
        sidebarBackdrop.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      });
      
      // Close sidebar when navigating
      document.querySelectorAll('#mobile-sidebar a').forEach(link => {
        link.addEventListener('click', () => {
          mobileSidebar.classList.add('-translate-x-full');
          sidebarBackdrop.classList.add('hidden');
          document.body.classList.remove('overflow-hidden');
        });
      });
    }
  });
</script>
